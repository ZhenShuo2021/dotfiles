# Default values
{{- $name := "ZhenShuo Leo" -}}
{{- $email := "98386542+ZhenShuo2021@users.noreply.github.com" -}}
{{- $github_user := "ZhenShuo2021" -}}
{{- $computer_name := default "MBP.leo" (env "CM_computer_name") -}}
{{- $hostname := default "leo" (env "CM_hostname") -}}
{{- $is_codespace := false }}
{{- $nas_mount_path := default "~/mnt/leonas" (env "NAS_PATH") -}}
{{- $passphrase := default "change me with 'SETPASS=1 chezmoi init'" (index . "passphrase") -}}
{{- $devcontainer := or (env "REMOTE_CONTAINERS") (env "CODESPACES") (env "VSCODE_REMOTE_CONTAINERS_SESSION") (env "GITPOD_HOST") | not | not -}}

# Check if we are in codespace
{{- $is_codespace:= env "CODESPACES" | not | not -}}
{{- $minimum := $devcontainer -}}

# Command line prompt
{{- if (env "ASK") }}
{{- $minimum = promptBool "Minimum install (only install zsh plugins, T/F)" false -}}

{{- if $minimum -}}

{{- else -}}
{{-   $computer_name = promptString "Computer Name" $computer_name -}}
{{-   $hostname = promptString "Hostname" $hostname -}}
{{-   $name = promptString "Full Name" $name -}}
{{-   $email = promptString "Email" $email -}}
{{-   $github_user = promptString "GitHub Username" $github_user -}}
{{- end -}}

{{- end }}

# Set passphrase if SETPASS env is given
{{- if (env "SETPASS") }}
{{    $passphrase = promptString "Encryption Passphrase" $passphrase -}}
{{- end }}

# Check delta installed
{{- $delta_is_not_installed := true }}
{{- if (contains "delta" (output "bash" "-c" "command -v delta || true")) }}
{{-   $delta_is_not_installed = false }}
{{- end }}

{{- if (env "MINIMUM") -}}
{{- $minimum = true -}}
{{- end -}}

{{- if $minimum -}}
{{-   writeToStdout "✅ Minimum mode enabled\n" -}}

{{- else -}}
{{-   writeToStdout "✅ Minimum mode disabled\n" -}}
{{- end -}}

# chezmoi data
data:
  name: {{ $name | quote }}
  email: {{ $email | quote }}
  github_user: {{ $github_user | quote }}
  computer_name: {{ $computer_name | quote }}
  hostname: {{ $hostname | quote }}
  nas_mount_path: {{ $nas_mount_path | quote }}
  passphrase: {{ $passphrase | quote }}

  flags:
    delta_is_not_installed: {{ $delta_is_not_installed }}
    is_codespace: {{ $is_codespace }}
    minimum: {{ $minimum }}

# It doesn't work for first remote install
scriptTempDir: "~/tmp"
encryption: gpg
gpg:
  symmetric: true
  args: ["--batch", "--passphrase", {{ $passphrase | quote }}, "--no-symkey-cache", "--quiet"]
