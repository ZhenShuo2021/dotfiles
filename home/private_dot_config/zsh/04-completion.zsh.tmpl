# Setup completions
# =============================================================================
# 請注意自動補全的載入順序必須是 FPATH > zstyle > compinit，如果插件需要
# compdef/compinit、修改 FPATH 等等依賴，就需要手動調整順序在 compinit 後載入

# Setup completion styles

# Set format for completion descriptions
zstyle ':completion:*:descriptions' format '%F{green}-- %d --%f'

# Set format for completion warnings
zstyle ':completion:*:warnings' format '%F{red}-- No matches found --%f'

# Set prompt for interactive completion selection
zstyle ':completion:*' select-prompt '%F{green}%p%f'

# Separate matches into groups, should be used with description format
zstyle ':completion:*:matches' group 'yes'
zstyle ':completion:*' group-name ''

zstyle ':completion:*:match:*' original only

# Case-insensitive tab completion
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Z}'

# Allow tab insertion when completion is pending
zstyle ':completion:*' insert-tab pending

# Enable menu selection for completion
zstyle ':completion:*' menu select

# Set cache path for completion
zstyle ':completion::complete:*' cache-path "$XDG_CACHE_HOME/zsh/zcompcache"

# Misc
zstyle ':completion:*' list-separator ' ➤ '
# zstyle ':completion:*' list-dirs-first true
# zstyle ':completion:*' list-packed true
# zstyle ':completion:*' rehash true

# Not using cache
# zstyle ':completion:*' use-cache no

# fuzzy matching
# zstyle ':completion:*' completer _complete _match _approximate
# zstyle -e ':completion:*:approximate:*' \
#   max-errors 'reply=($((($#PREFIX+$#SUFFIX)/3))numeric)'

# Uncomment if $BREW_PATH/share/zsh/site-functions missing in FPATH
# if type brew &>/dev/null
# then
#   FPATH="$(brew --prefix)/share/zsh/site-functions:${FPATH}"
# fi


# shellenv MUST run before compinit
# eval shellenv in .zprofile if get something wrong in your completion
if [[ -f "$BREW_PATH/bin/brew" ]]; then
    eval "$("$BREW_PATH/bin/brew" shellenv)"
fi

if [[ -d "$BREW_PATH" ]]; then
    site_func_path="$BREW_PATH/share/zsh/site-functions"

    setup_completion() {
        local cmd="$1"
        local file="_$cmd"
        local target="$site_func_path/$file"

        if [[ -f "$target" ]]; then return; fi
        if ! type "$cmd" &> /dev/null; then return; fi

        "$cmd" completion zsh > "$target"
    }

    setup_completion hugo
    setup_completion pnpm
fi

# brew pyenv completion
if type pyenv &> /dev/null; then
    source "$BREW_PATH/opt/pyenv/completions/pyenv.zsh"
fi

# initialize completion system
zstyle ':zcomet:compinit' arguments -d "$ZSH_COMPDUMP"
zcomet compinit

# use zcomet compinit in plugin.zsh
# autoload -Uz compinit
# compinit -d "$ZSH_COMPDUMP"

# uv (python)
eval "$(uv generate-shell-completion zsh)"
eval "$(uvx --generate-shell-completion zsh)"

# https://github.com/astral-sh/uv/issues/8432#issuecomment-2453494736
_uv_run_mod() {
    if [[ "$words[2]" == "run" && "$words[CURRENT]" != -* ]]; then
        _arguments '*:filename:_files'
    else
        _uv "$@"
    fi
}
compdef _uv_run_mod uv
